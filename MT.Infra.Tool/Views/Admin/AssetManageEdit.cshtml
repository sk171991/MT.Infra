@model MT.Infra.BusinessLayer.ViewAssetsModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    <style>
        .Col1 {
            /*border: 1px solid #ff0000;*/
            margin-top: 7px;
            text-align: left;
        }

        .Col2 {
            margin-top: 7px;
        }

        .d {
            width: 300px;
        }
    </style>

</head>
<body>
    <div class="panel responsive">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Update Assets</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-offset-2 col-md-2 col-xs-2 Col1" style="">
                            @Html.LabelFor(model => model.SystemName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-6 col-xs-6 Col2">
                            @Html.EditorFor(model => model.SystemName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SystemName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-2 col-md-2 col-xs-2 Col1 ">
                            @Html.LabelFor(model => model.SerialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-6 col-xs-6 Col2">
                            @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-2 col-md-2 col-xs-2 Col1 ">
                            @Html.LabelFor(model => model.SystemIP, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-6 col-xs-6 Col2">
                            @Html.EditorFor(model => model.SystemIP, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SystemIP, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-2 col-md-2 col-xs-2 Col1 ">
                            @Html.LabelFor(model => model.MachineCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-6 col-xs-6 Col2">
                            @Html.EditorFor(model => model.MachineCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MachineCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-2 col-md-2 col-xs-2 Col1 ">
                            @Html.LabelFor(model => model.MachineType, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>

                        <div class="col-md-6 col-xs-6 Col2">
                            @Html.DropDownListFor(model => model.MachineType, (IEnumerable<SelectListItem>)ViewData["DropdownAssets"], "Select Machine Type", new { @class = "dropdown form-control d" })
                            @Html.ValidationMessageFor(model => model.MachineType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-2 col-md-2 col-xs-2 Col1 ">
                            @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-6 col-xs-6 Col2">
                            @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-2 col-md-2 col-xs-2 Col1 ">
                            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-6 col-xs-6 Col2">
                            @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-1 col-xs-2 Col1">
                            <table>
                                <tr>
                                    <td>
                                        <input type="submit" value="Update" class="btn btn-success" />
                                    </td>
                                    <td>&nbsp;</td>
                                    <td>
                                        <button class="btn  btn-success"> @Html.ActionLink("Back to List", "ConfigureAsset")</button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</body>
</html>
